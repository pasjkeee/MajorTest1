Физический 
	Тип данных: Биты
Работа со средой передачи, сигналами и двоичными данными (концентратор, повторитель)
2) Канальный 
	Тип данных: Биты / Кадры
Физическая адресация (Коммутатор)
3) Сетевой 
	Тип данных: Пакеты
Определение маршрута и логическая адресация (Маршрутизатор)
4) Транспортный 
	Тип данных: Сегменты / Датаграммы
Прямая связь между конечными пунктами  (Хосты)
5) сеансовый
	Тип данных: Данные
Управление сеансом связи
6) Представления
	Тип данных: Данные
Представление и шифрование данных
7) Прикладной
	Тип данных: Данные
Доступ к сетевым службам
Протокол TCP (Transmission Control Protocol) – это сетевой протокол. сетевая модель передачи данных, представленных в цифровом виде. Модель описывает способ передачи данных от источника информации к получателю. В модели предполагается прохождение информации через четыре уровня, каждый из которых описывается правилом (протоколом передачи). Прежде, чем начать обмен данными, данному протоколу требуется установить соединение между двумя хостами. Данный протокол имеет высокую надежность, поскольку позволяет не терять данные при передаче, запрашивает подтверждения о получении от принимающей стороны и в случае необходимости отправляет данные повторно. При этом отправляемые пакеты данных сохраняют порядок отправки, то есть можно сказать, что передача данных упорядочена. Минусом данного протокола является относительно низкая скорость передачи данных, за счет того что выполнение надежной и упорядоченной передачи занимает больше времени, чем в альтернативном протоколе UDP.

Протокол UDP (User Datagram Protocol). Протокол пользовательских датаграм Для передачи данных ему не обязательно устанавливать соединение между отправителем и получателем. Информация передается без предварительной проверки готовности принимающей стороны. Это делает протокол менее надежным – при передаче некоторые фрагменты данных могут теряться. Кроме того, упорядоченность данных не соблюдается – возможен непоследовательный прием данных получателем. Зато скорость передачи данных по данному транспортному протоколу будет более высокой.

Сравнивая оба протокола, очевидно, что протокол TCP – это, можно сказать, «снайпер». Прицелился, выстрелил, зафиксировал попадание, ищет следующую цель. UDP – это, скорее, «пулеметчик» - выставил ствол в направлении врага и начал долбить очередями, не слишком заботясь о точности. Как в войсках важны обе эти воинские специальности, так и в интернете важны оба этих протокола. TCP применяется там, где требуется точная и подтверждаемая передача данных – например, отправка фотографий, или переписка между пользователями. UDP, в свою очередь, нужен для общения в голосовом формате, или при передаче потокового видео, например, с веб-камер или IP-камер.

HTTP – это протокол передачи информации в интернете, который расшифровывается как «протокол передачи гипертекста» (HyperText Transfer Protocol).
Протокол HTTP предназначен для передачи содержимого в Интернете. HTTP — это простой протокол, который использует для передачи содержимого надежные службы протокола TCP. Благодаря этому HTTP считается очень надежным протоколом для обмена содержимым. Также HTTP является одним из самых часто используемых протоколов приложений. Все операции в Интернете используют протокол HTTP.

В протоколе HTTP есть простой механизм для запроса содержимого в Интернете. Доступен стандартные набор команд HTTP, которые отправляются клиентом после успешного установления подключения по стандартному TCP-порту 80 (или порту 443 для HTTPS) .

Основные запросы
	GET ресурс HTTP/1.1: получение указанного ресурса.
	POST ресурс HTTP/1.1: получение указанного ресурса и передача вложенных входных данных на HTTP-сервер.
	HEAD ресурс HTTP/1.1: выполняется так же, как GET, но HTTP-сервер не возвращает содержимое.
	PUT ресурс HTTP/1.1: размещение ресурса на HTTP-сервере.
	DELETE ресурс HTTP/1.1: удаление ресурса с сервера.